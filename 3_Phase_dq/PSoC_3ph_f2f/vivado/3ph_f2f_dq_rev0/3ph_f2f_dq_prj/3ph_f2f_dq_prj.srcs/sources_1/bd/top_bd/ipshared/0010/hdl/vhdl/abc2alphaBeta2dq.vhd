-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity abc2alphaBeta2dq is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_V : IN STD_LOGIC_VECTOR (15 downto 0);
    b_V : IN STD_LOGIC_VECTOR (15 downto 0);
    c_V : IN STD_LOGIC_VECTOR (15 downto 0);
    cosTh_V : IN STD_LOGIC_VECTOR (15 downto 0);
    sinTh_V : IN STD_LOGIC_VECTOR (15 downto 0);
    alpha_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    beta_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    q_V : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of abc2alphaBeta2dq is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "abc2alphaBeta2dq,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.841000,HLS_SYN_LAT=8,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=6,HLS_SYN_FF=944,HLS_SYN_LUT=602}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv30_555 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000010101010101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv30_93D : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000100100111101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal alpha_V_1_data_reg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal alpha_V_1_vld_reg : STD_LOGIC := '0';
    signal alpha_V_1_vld_in : STD_LOGIC;
    signal alpha_V_1_ack_in : STD_LOGIC;
    signal beta_V_1_data_reg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal beta_V_1_vld_reg : STD_LOGIC := '0';
    signal beta_V_1_vld_in : STD_LOGIC;
    signal beta_V_1_ack_in : STD_LOGIC;
    signal d_V_1_data_reg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal d_V_1_vld_reg : STD_LOGIC := '0';
    signal d_V_1_vld_in : STD_LOGIC;
    signal d_V_1_ack_in : STD_LOGIC;
    signal q_V_1_data_reg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal q_V_1_vld_reg : STD_LOGIC := '0';
    signal q_V_1_vld_in : STD_LOGIC;
    signal q_V_1_ack_in : STD_LOGIC;
    signal r_V_fu_186_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_reg_1086 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1046_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_5_reg_1091 : STD_LOGIC_VECTOR (29 downto 0);
    signal signbit_1_reg_1097 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_8_reg_1104 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1114 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_2_fu_235_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_2_reg_1120 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal signbit_reg_1126 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_4_fu_271_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_reg_1133 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_reg_1139 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_1146 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_7_fu_305_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_7_reg_1152 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_1_fu_310_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_1_reg_1158 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_reg_1163 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_reg_1168 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_1173 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i1_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i1_reg_1178 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_1_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_1_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_reg_1190 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_9_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1195 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_reg_1200 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_1205 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_reg_1210 : STD_LOGIC_VECTOR (0 downto 0);
    signal beta_V_load_fu_568_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal beta_V_load_reg_1215 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_13_fu_597_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_13_reg_1221 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal OP2_V_fu_605_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_reg_1227 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_1_fu_609_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_1_reg_1232 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_14_fu_1058_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_14_reg_1237 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_fu_1064_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_reg_1242 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_Val2_9_9_fu_1069_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_9_reg_1248 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1074_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_15_reg_1254 : STD_LOGIC_VECTOR (31 downto 0);
    signal signbit_3_reg_1259 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_17_fu_653_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_17_reg_1266 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_3_fu_659_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_3_reg_1272 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_3_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_3_reg_1278 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_1285 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_fu_694_p2 : signal is "no";
    signal tmp_reg_1291 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal signbit_2_reg_1296 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_742_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_12_reg_1302 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_2_fu_748_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_2_reg_1308 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_2_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_2_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_2_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_2_reg_1321 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_reg_1326 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_reg_1333 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i3_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i3_reg_1338 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_1343 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_3_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_3_reg_1348 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i3_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i3_reg_1358 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i2_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i2_reg_1363 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_18_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_1368 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_2_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_2_reg_1373 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_reg_1378 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i2_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i2_reg_1383 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1007_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_1037_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal p_Val2_s_fu_160_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_4_cast_fu_168_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_5_cast_fu_172_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_fu_176_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_8_cast_fu_182_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_2_fu_235_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_5_fu_259_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_fu_249_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_267_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_295_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_fu_298_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_330_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i1_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_1_fu_358_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_378_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_396_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_413_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_432_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_demorgan_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_496_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i1_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i1_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_demorgan_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_1_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i1_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_not_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_9_mux_fu_554_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_9_fu_561_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_mux_fu_585_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_6_fu_591_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_fu_635_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_16_fu_626_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_642_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_646_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_691_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_12_fu_688_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_10_fu_698_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_37_fu_722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_11_fu_712_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_730_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_734_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_768_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_s_fu_784_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal Range1_all_ones_3_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_806_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i3_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_3_fu_823_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i3_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i3_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_3_fu_841_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_demorgan_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_903_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i2_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_910_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i2_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i2_fu_942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_2_fu_926_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_demorgan_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_2_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_not_fu_990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_20_mux_fu_995_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_11_fu_1001_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_not_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_14_mux_fu_1025_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_10_fu_1031_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1046_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_8_fu_1064_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_8_fu_1064_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP1_V_fu_612_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_9_fu_1069_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_fu_615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_9_fu_1069_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1074_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1074_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_state9 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component abc2alphaBeta2dq_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component abc2alphaBeta2dq_cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component abc2alphaBeta2dq_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    abc2alphaBeta2dq_bkb_U0 : component abc2alphaBeta2dq_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 13,
        dout_WIDTH => 30)
    port map (
        din0 => b_V,
        din1 => c_V,
        din2 => grp_fu_1046_p2,
        dout => grp_fu_1046_p3);

    abc2alphaBeta2dq_cud_U1 : component abc2alphaBeta2dq_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => cosTh_V,
        din1 => beta_V_load_reg_1215,
        dout => p_Val2_14_fu_1058_p2);

    abc2alphaBeta2dq_cud_U2 : component abc2alphaBeta2dq_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => p_Val2_8_fu_1064_p0,
        din1 => p_Val2_8_fu_1064_p1,
        dout => p_Val2_8_fu_1064_p2);

    abc2alphaBeta2dq_cud_U3 : component abc2alphaBeta2dq_cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => p_Val2_9_9_fu_1069_p0,
        din1 => p_Val2_9_9_fu_1069_p1,
        dout => p_Val2_9_9_fu_1069_p2);

    abc2alphaBeta2dq_dEe_U4 : component abc2alphaBeta2dq_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_1074_p0,
        din1 => grp_fu_1074_p1,
        din2 => p_Val2_14_reg_1237,
        dout => grp_fu_1074_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    alpha_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    beta_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    d_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    q_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                OP1_V_1_reg_1232 <= OP1_V_1_fu_609_p1;
                OP2_V_reg_1227 <= OP2_V_fu_605_p1;
                p_Val2_13_reg_1221 <= p_Val2_13_fu_597_p3;
                p_Val2_14_reg_1237 <= p_Val2_14_fu_1058_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                Range1_all_ones_1_reg_1168 <= Range1_all_ones_1_fu_337_p2;
                Range1_all_zeros_1_reg_1173 <= Range1_all_zeros_1_fu_342_p2;
                brmerge40_demorgan_i_1_reg_1184 <= brmerge40_demorgan_i_1_fu_372_p2;
                carry_1_reg_1163 <= carry_1_fu_324_p2;
                newsignbit_1_reg_1158 <= p_Val2_7_fu_305_p2(15 downto 15);
                newsignbit_reg_1139 <= p_Val2_4_fu_271_p2(15 downto 15);
                p_38_i1_reg_1178 <= p_38_i1_fu_366_p2;
                p_Val2_2_reg_1120 <= p_Val2_2_fu_235_p2;
                p_Val2_4_reg_1133 <= p_Val2_4_fu_271_p2;
                p_Val2_7_reg_1152 <= p_Val2_7_fu_305_p2;
                signbit_reg_1126 <= p_Val2_2_fu_235_p2(29 downto 29);
                tmp_30_reg_1146 <= p_Val2_2_fu_235_p2(29 downto 28);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                Range1_all_ones_2_reg_1326 <= Range1_all_ones_2_fu_794_p2;
                Range1_all_zeros_2_reg_1333 <= Range1_all_zeros_2_fu_800_p2;
                Range2_all_ones_2_reg_1321 <= Range2_all_ones_2_fu_778_p2;
                brmerge40_demorgan_i_3_reg_1348 <= brmerge40_demorgan_i_3_fu_875_p2;
                brmerge_i_i3_reg_1358 <= brmerge_i_i3_fu_897_p2;
                carry_2_reg_1314 <= carry_2_fu_762_p2;
                newsignbit_2_reg_1308 <= p_Val2_12_fu_742_p2(15 downto 15);
                p_38_i3_reg_1338 <= p_38_i3_fu_848_p2;
                p_Val2_12_reg_1302 <= p_Val2_12_fu_742_p2;
                signbit_2_reg_1296 <= p_Val2_10_fu_698_p2(32 downto 32);
                tmp_25_reg_1343 <= tmp_25_fu_864_p2;
                tmp_reg_1291 <= tmp_fu_694_p2;
                underflow_3_reg_1353 <= underflow_3_fu_892_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = alpha_V_1_vld_in) and (ap_const_logic_0 = alpha_V_1_vld_reg)) or (not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = alpha_V_1_vld_in) and (ap_const_logic_1 = alpha_V_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then
                alpha_V_1_data_reg <= p_Val2_13_reg_1221;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = beta_V_1_vld_in) and (ap_const_logic_0 = beta_V_1_vld_reg)) or (not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = beta_V_1_vld_in) and (ap_const_logic_1 = beta_V_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then
                beta_V_1_data_reg <= beta_V_load_reg_1215;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                beta_V_load_reg_1215 <= beta_V_load_fu_568_p3;
                brmerge40_demorgan_i_reg_1200 <= brmerge40_demorgan_i_fu_468_p2;
                brmerge_i_i_reg_1210 <= brmerge_i_i_fu_490_p2;
                p_38_i_reg_1190 <= p_38_i_fu_440_p2;
                tmp_9_reg_1195 <= tmp_9_fu_457_p2;
                underflow_reg_1205 <= underflow_fu_485_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                brmerge40_demorgan_i_2_reg_1373 <= brmerge40_demorgan_i_2_fu_958_p2;
                brmerge_i_i2_reg_1383 <= brmerge_i_i2_fu_980_p2;
                p_38_i2_reg_1363 <= p_38_i2_fu_932_p2;
                tmp_18_reg_1368 <= tmp_18_fu_947_p2;
                underflow_2_reg_1378 <= underflow_2_fu_975_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                carry_3_reg_1278 <= carry_3_fu_673_p2;
                newsignbit_3_reg_1272 <= p_Val2_17_fu_653_p2(15 downto 15);
                p_Val2_15_reg_1254 <= grp_fu_1074_p3;
                p_Val2_17_reg_1266 <= p_Val2_17_fu_653_p2;
                p_Val2_8_reg_1242 <= p_Val2_8_fu_1064_p2;
                p_Val2_9_9_reg_1248 <= p_Val2_9_9_fu_1069_p2;
                signbit_3_reg_1259 <= grp_fu_1074_p3(31 downto 31);
                tmp_23_reg_1285 <= grp_fu_1074_p3(31 downto 30);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = d_V_1_vld_in) and (ap_const_logic_0 = d_V_1_vld_reg)) or (not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = d_V_1_vld_in) and (ap_const_logic_1 = d_V_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then
                d_V_1_data_reg <= tmp_19_fu_1037_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_Val2_5_reg_1091 <= grp_fu_1046_p3;
                p_Val2_6_8_reg_1104 <= grp_fu_1046_p3(27 downto 12);
                r_V_reg_1086 <= r_V_fu_186_p2;
                signbit_1_reg_1097 <= grp_fu_1046_p3(29 downto 29);
                tmp_32_reg_1109 <= grp_fu_1046_p3(11 downto 11);
                tmp_4_reg_1114 <= grp_fu_1046_p3(29 downto 28);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = q_V_1_vld_in) and (ap_const_logic_0 = q_V_1_vld_reg)) or (not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = q_V_1_vld_in) and (ap_const_logic_1 = q_V_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then
                q_V_1_data_reg <= tmp_26_fu_1007_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, alpha_V_1_ack_in, beta_V_1_ack_in, d_V_1_ack_in, q_V_1_ack_in, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = alpha_V_1_ack_in) or (ap_const_logic_0 = beta_V_1_ack_in) or (ap_const_logic_0 = d_V_1_ack_in) or (ap_const_logic_0 = q_V_1_ack_in))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
        OP1_V_1_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(beta_V_load_reg_1215),32));

        OP1_V_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_13_reg_1221),32));

        OP2_V_1_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sinTh_V),32));

        OP2_V_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cosTh_V),32));

    Range1_all_ones_1_fu_337_p2 <= "1" when (tmp_4_reg_1114 = ap_const_lv2_3) else "0";
    Range1_all_ones_2_fu_794_p2 <= "1" when (p_Result_s_fu_784_p4 = ap_const_lv3_7) else "0";
    Range1_all_ones_3_fu_813_p2 <= "1" when (tmp_23_reg_1285 = ap_const_lv2_3) else "0";
    Range1_all_ones_fu_403_p2 <= "1" when (tmp_30_reg_1146 = ap_const_lv2_3) else "0";
    Range1_all_zeros_1_fu_342_p2 <= "1" when (tmp_4_reg_1114 = ap_const_lv2_0) else "0";
    Range1_all_zeros_2_fu_800_p2 <= "1" when (p_Result_s_fu_784_p4 = ap_const_lv3_0) else "0";
    Range1_all_zeros_3_fu_818_p2 <= "1" when (tmp_23_reg_1285 = ap_const_lv2_0) else "0";
    Range1_all_zeros_fu_408_p2 <= "1" when (tmp_30_reg_1146 = ap_const_lv2_0) else "0";
    Range2_all_ones_2_fu_778_p2 <= "1" when (p_Result_5_fu_768_p4 = ap_const_lv2_3) else "0";
    alpha_V <= alpha_V_1_data_reg;

    alpha_V_1_ack_in_assign_proc : process(alpha_V_1_vld_reg)
    begin
        if (((ap_const_logic_0 = alpha_V_1_vld_reg) or ((ap_const_logic_1 = alpha_V_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            alpha_V_1_ack_in <= ap_const_logic_1;
        else 
            alpha_V_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    alpha_V_1_vld_in_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            alpha_V_1_vld_in <= ap_const_logic_1;
        else 
            alpha_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state9_assign_proc : process(alpha_V_1_ack_in, beta_V_1_ack_in, d_V_1_ack_in, q_V_1_ack_in)
    begin
                ap_block_state9 <= ((ap_const_logic_0 = alpha_V_1_ack_in) or (ap_const_logic_0 = beta_V_1_ack_in) or (ap_const_logic_0 = d_V_1_ack_in) or (ap_const_logic_0 = q_V_1_ack_in));
    end process;


    ap_done_assign_proc : process(alpha_V_1_ack_in, beta_V_1_ack_in, d_V_1_ack_in, q_V_1_ack_in, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = alpha_V_1_ack_in) or (ap_const_logic_0 = beta_V_1_ack_in) or (ap_const_logic_0 = d_V_1_ack_in) or (ap_const_logic_0 = q_V_1_ack_in))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(alpha_V_1_ack_in, beta_V_1_ack_in, d_V_1_ack_in, q_V_1_ack_in, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and not(((ap_const_logic_0 = alpha_V_1_ack_in) or (ap_const_logic_0 = beta_V_1_ack_in) or (ap_const_logic_0 = d_V_1_ack_in) or (ap_const_logic_0 = q_V_1_ack_in))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    beta_V <= beta_V_1_data_reg;

    beta_V_1_ack_in_assign_proc : process(beta_V_1_vld_reg)
    begin
        if (((ap_const_logic_0 = beta_V_1_vld_reg) or ((ap_const_logic_1 = beta_V_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            beta_V_1_ack_in <= ap_const_logic_1;
        else 
            beta_V_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    beta_V_1_vld_in_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            beta_V_1_vld_in <= ap_const_logic_1;
        else 
            beta_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    beta_V_load_fu_568_p3 <= 
        p_Val2_9_mux_fu_554_p3 when (underflow_1_not_fu_549_p2(0) = '1') else 
        p_Val2_9_fu_561_p3;
    brmerge40_demorgan_i_1_fu_372_p2 <= (newsignbit_1_fu_310_p3 and deleted_ones_1_fu_358_p3);
    brmerge40_demorgan_i_2_fu_958_p2 <= (newsignbit_2_reg_1308 and deleted_ones_2_fu_926_p3);
    brmerge40_demorgan_i_3_fu_875_p2 <= (newsignbit_3_reg_1272 and deleted_ones_3_fu_841_p3);
    brmerge40_demorgan_i_fu_468_p2 <= (newsignbit_reg_1139 and deleted_ones_fu_432_p3);
    brmerge_i1_fu_507_p2 <= (newsignbit_1_reg_1158 or p_not_i1_fu_501_p2);
    brmerge_i2_fu_942_p2 <= (newsignbit_2_reg_1308 or p_not_i2_fu_936_p2);
    brmerge_i3_fu_859_p2 <= (newsignbit_3_reg_1272 or p_not_i3_fu_853_p2);
    brmerge_i_fu_452_p2 <= (newsignbit_reg_1139 or p_not_i_fu_446_p2);
    brmerge_i_i1_fu_538_p2 <= (underflow_1_fu_533_p2 or overflow_1_fu_517_p2);
    brmerge_i_i2_fu_980_p2 <= (underflow_2_fu_975_p2 or overflow_2_fu_952_p2);
    brmerge_i_i3_fu_897_p2 <= (underflow_3_fu_892_p2 or overflow_3_fu_869_p2);
    brmerge_i_i_fu_490_p2 <= (underflow_fu_485_p2 or overflow_fu_462_p2);
    carry_1_fu_324_p2 <= (tmp_33_fu_298_p3 and tmp_8_fu_318_p2);
    carry_2_fu_762_p2 <= (tmp_38_fu_734_p3 and tmp_16_fu_756_p2);
    carry_3_fu_673_p2 <= (tmp_43_fu_646_p3 and tmp_22_fu_667_p2);
    carry_fu_390_p2 <= (tmp_15_fu_378_p3 and tmp_s_fu_385_p2);
    d_V <= d_V_1_data_reg;

    d_V_1_ack_in_assign_proc : process(d_V_1_vld_reg)
    begin
        if (((ap_const_logic_0 = d_V_1_vld_reg) or ((ap_const_logic_1 = d_V_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            d_V_1_ack_in <= ap_const_logic_1;
        else 
            d_V_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    d_V_1_vld_in_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_V_1_vld_in <= ap_const_logic_1;
        else 
            d_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    deleted_ones_1_fu_358_p3 <= 
        p_41_i1_fu_353_p2 when (carry_1_fu_324_p2(0) = '1') else 
        Range1_all_ones_1_fu_337_p2;
    deleted_ones_2_fu_926_p3 <= 
        p_41_i2_fu_921_p2 when (carry_2_reg_1314(0) = '1') else 
        Range1_all_ones_2_reg_1326;
    deleted_ones_3_fu_841_p3 <= 
        p_41_i3_fu_836_p2 when (carry_3_reg_1278(0) = '1') else 
        Range1_all_ones_3_fu_813_p2;
    deleted_ones_fu_432_p3 <= 
        p_41_i_fu_427_p2 when (carry_fu_390_p2(0) = '1') else 
        Range1_all_ones_fu_403_p2;
    deleted_zeros_1_fu_496_p3 <= 
        Range1_all_ones_1_reg_1168 when (carry_1_reg_1163(0) = '1') else 
        Range1_all_zeros_1_reg_1173;
    deleted_zeros_2_fu_910_p3 <= 
        Range1_all_ones_2_reg_1326 when (carry_2_reg_1314(0) = '1') else 
        Range1_all_zeros_2_reg_1333;
    deleted_zeros_3_fu_823_p3 <= 
        Range1_all_ones_3_fu_813_p2 when (carry_3_reg_1278(0) = '1') else 
        Range1_all_zeros_3_fu_818_p2;
    deleted_zeros_fu_413_p3 <= 
        Range1_all_ones_fu_403_p2 when (carry_fu_390_p2(0) = '1') else 
        Range1_all_zeros_fu_408_p2;
    grp_fu_1046_p2 <= ap_const_lv30_93D(13 - 1 downto 0);
    grp_fu_1074_p0 <= OP1_V_fu_612_p1(16 - 1 downto 0);
    grp_fu_1074_p1 <= OP2_V_1_fu_615_p1(16 - 1 downto 0);
    newsignbit_1_fu_310_p3 <= p_Val2_7_fu_305_p2(15 downto 15);
    newsignbit_2_fu_748_p3 <= p_Val2_12_fu_742_p2(15 downto 15);
    newsignbit_3_fu_659_p3 <= p_Val2_17_fu_653_p2(15 downto 15);
    overflow_1_fu_517_p2 <= (brmerge_i1_fu_507_p2 and tmp_11_fu_512_p2);
    overflow_2_fu_952_p2 <= (brmerge_i2_fu_942_p2 and tmp_18_fu_947_p2);
    overflow_3_fu_869_p2 <= (brmerge_i3_fu_859_p2 and tmp_25_fu_864_p2);
    overflow_fu_462_p2 <= (brmerge_i_fu_452_p2 and tmp_9_fu_457_p2);
    p_38_i1_fu_366_p2 <= (carry_1_fu_324_p2 and Range1_all_ones_1_fu_337_p2);
    p_38_i2_fu_932_p2 <= (carry_2_reg_1314 and Range1_all_ones_2_reg_1326);
    p_38_i3_fu_848_p2 <= (carry_3_reg_1278 and Range1_all_ones_3_fu_813_p2);
    p_38_i_fu_440_p2 <= (carry_fu_390_p2 and Range1_all_ones_fu_403_p2);
    p_41_i1_fu_353_p2 <= (signbit_1_reg_1097 and tmp_10_fu_347_p2);
    p_41_i2_fu_921_p2 <= (Range2_all_ones_2_reg_1321 and tmp_17_fu_915_p2);
    p_41_i3_fu_836_p2 <= (signbit_3_reg_1259 and tmp_24_fu_830_p2);
    p_41_i_fu_427_p2 <= (signbit_reg_1126 and tmp_1_fu_421_p2);
    p_Result_5_fu_768_p4 <= p_Val2_10_fu_698_p2(32 downto 31);
    p_Result_s_fu_784_p4 <= p_Val2_10_fu_698_p2(32 downto 30);
    p_Val2_10_fu_698_p2 <= std_logic_vector(signed(tmp_13_fu_691_p1) + signed(tmp_12_fu_688_p1));
    p_Val2_11_fu_712_p4 <= tmp_fu_694_p2(29 downto 14);
    p_Val2_12_fu_742_p2 <= std_logic_vector(unsigned(p_Val2_11_fu_712_p4) + unsigned(tmp_14_fu_730_p1));
    p_Val2_13_fu_597_p3 <= 
        p_Val2_6_mux_fu_585_p3 when (underflow_not_fu_580_p2(0) = '1') else 
        p_Val2_6_fu_591_p3;
    p_Val2_14_mux_fu_1025_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i2_reg_1383(0) = '1') else 
        p_Val2_12_reg_1302;
    p_Val2_16_fu_626_p4 <= grp_fu_1074_p3(29 downto 14);
    p_Val2_17_fu_653_p2 <= std_logic_vector(unsigned(p_Val2_16_fu_626_p4) + unsigned(tmp_21_fu_642_p1));
    p_Val2_1_11_fu_1001_p3 <= 
        ap_const_lv16_8000 when (underflow_3_reg_1353(0) = '1') else 
        p_Val2_17_reg_1266;
    p_Val2_1_fu_176_p2 <= std_logic_vector(signed(tmp_4_cast_fu_168_p1) - signed(tmp_5_cast_fu_172_p1));
    p_Val2_20_mux_fu_995_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i3_reg_1358(0) = '1') else 
        p_Val2_17_reg_1266;
    p_Val2_2_fu_235_p0 <= r_V_reg_1086;
    p_Val2_2_fu_235_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_2_fu_235_p0) * signed('0' &ap_const_lv30_555))), 30));
    p_Val2_3_fu_249_p4 <= p_Val2_2_fu_235_p2(27 downto 12);
    p_Val2_4_fu_271_p2 <= std_logic_vector(unsigned(p_Val2_3_fu_249_p4) + unsigned(tmp_3_fu_267_p1));
    p_Val2_6_fu_591_p3 <= 
        ap_const_lv16_8000 when (underflow_reg_1205(0) = '1') else 
        p_Val2_4_reg_1133;
    p_Val2_6_mux_fu_585_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i_reg_1210(0) = '1') else 
        p_Val2_4_reg_1133;
    p_Val2_7_fu_305_p2 <= std_logic_vector(unsigned(p_Val2_6_8_reg_1104) + unsigned(tmp_2_fu_295_p1));
    p_Val2_8_fu_1064_p0 <= OP2_V_reg_1227(16 - 1 downto 0);
    p_Val2_8_fu_1064_p1 <= OP1_V_fu_612_p1(16 - 1 downto 0);
    p_Val2_9_9_fu_1069_p0 <= OP2_V_1_fu_615_p1(16 - 1 downto 0);
    p_Val2_9_9_fu_1069_p1 <= OP1_V_1_reg_1232(16 - 1 downto 0);
    p_Val2_9_fu_561_p3 <= 
        ap_const_lv16_8000 when (underflow_1_fu_533_p2(0) = '1') else 
        p_Val2_7_reg_1152;
    p_Val2_9_mux_fu_554_p3 <= 
        ap_const_lv16_7FFF when (brmerge_i_i1_fu_538_p2(0) = '1') else 
        p_Val2_7_reg_1152;
    p_Val2_s_10_fu_1031_p3 <= 
        ap_const_lv16_8000 when (underflow_2_reg_1378(0) = '1') else 
        p_Val2_12_reg_1302;
    p_Val2_s_fu_160_p3 <= (a_V & ap_const_lv1_0);
    p_not_i1_fu_501_p2 <= (deleted_zeros_1_fu_496_p3 xor ap_const_lv1_1);
    p_not_i2_fu_936_p2 <= (deleted_zeros_2_fu_910_p3 xor ap_const_lv1_1);
    p_not_i3_fu_853_p2 <= (deleted_zeros_3_fu_823_p3 xor ap_const_lv1_1);
    p_not_i_fu_446_p2 <= (deleted_zeros_fu_413_p3 xor ap_const_lv1_1);
    q_V <= q_V_1_data_reg;

    q_V_1_ack_in_assign_proc : process(q_V_1_vld_reg)
    begin
        if (((ap_const_logic_0 = q_V_1_vld_reg) or ((ap_const_logic_1 = q_V_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            q_V_1_ack_in <= ap_const_logic_1;
        else 
            q_V_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    q_V_1_vld_in_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            q_V_1_vld_in <= ap_const_logic_1;
        else 
            q_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    r_V_fu_186_p2 <= std_logic_vector(unsigned(p_Val2_1_fu_176_p2) - unsigned(tmp_8_cast_fu_182_p1));
    tmp1_demorgan_fu_473_p2 <= (p_38_i_fu_440_p2 or brmerge40_demorgan_i_fu_468_p2);
    tmp1_fu_479_p2 <= (tmp1_demorgan_fu_473_p2 xor ap_const_lv1_1);
    tmp2_fu_576_p2 <= (brmerge40_demorgan_i_reg_1200 or tmp_9_reg_1195);
    tmp3_demorgan_fu_523_p2 <= (p_38_i1_reg_1178 or brmerge40_demorgan_i_1_reg_1184);
    tmp3_fu_527_p2 <= (tmp3_demorgan_fu_523_p2 xor ap_const_lv1_1);
    tmp4_fu_544_p2 <= (brmerge40_demorgan_i_1_reg_1184 or tmp_11_fu_512_p2);
    tmp5_demorgan_fu_963_p2 <= (p_38_i2_fu_932_p2 or brmerge40_demorgan_i_2_fu_958_p2);
    tmp5_fu_969_p2 <= (tmp5_demorgan_fu_963_p2 xor ap_const_lv1_1);
    tmp6_fu_1016_p2 <= (brmerge40_demorgan_i_2_reg_1373 or tmp_18_reg_1368);
    tmp7_demorgan_fu_880_p2 <= (p_38_i3_fu_848_p2 or brmerge40_demorgan_i_3_fu_875_p2);
    tmp7_fu_886_p2 <= (tmp7_demorgan_fu_880_p2 xor ap_const_lv1_1);
    tmp8_fu_986_p2 <= (brmerge40_demorgan_i_3_reg_1348 or tmp_25_reg_1343);
    tmp_10_fu_347_p2 <= (tmp_35_fu_330_p3 xor ap_const_lv1_1);
    tmp_11_fu_512_p2 <= (signbit_1_reg_1097 xor ap_const_lv1_1);
        tmp_12_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1242),33));

        tmp_13_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_9_9_reg_1248),33));

    tmp_14_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_722_p3),16));
    tmp_15_fu_378_p3 <= p_Val2_2_reg_1120(27 downto 27);
    tmp_16_fu_756_p2 <= (newsignbit_2_fu_748_p3 xor ap_const_lv1_1);
    tmp_17_fu_915_p2 <= (tmp_40_fu_903_p3 xor ap_const_lv1_1);
    tmp_18_fu_947_p2 <= (signbit_2_reg_1296 xor ap_const_lv1_1);
    tmp_19_fu_1037_p3 <= 
        p_Val2_14_mux_fu_1025_p3 when (underflow_2_not_fu_1020_p2(0) = '1') else 
        p_Val2_s_10_fu_1031_p3;
    tmp_1_fu_421_p2 <= (tmp_29_fu_396_p3 xor ap_const_lv1_1);
    tmp_21_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_635_p3),16));
    tmp_22_fu_667_p2 <= (newsignbit_3_fu_659_p3 xor ap_const_lv1_1);
    tmp_24_fu_830_p2 <= (tmp_45_fu_806_p3 xor ap_const_lv1_1);
    tmp_25_fu_864_p2 <= (signbit_3_reg_1259 xor ap_const_lv1_1);
    tmp_26_fu_1007_p3 <= 
        p_Val2_20_mux_fu_995_p3 when (underflow_3_not_fu_990_p2(0) = '1') else 
        p_Val2_1_11_fu_1001_p3;
    tmp_29_fu_396_p3 <= p_Val2_2_reg_1120(28 downto 28);
    tmp_2_fu_295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_reg_1109),16));
    tmp_33_fu_298_p3 <= p_Val2_5_reg_1091(27 downto 27);
    tmp_35_fu_330_p3 <= p_Val2_5_reg_1091(28 downto 28);
    tmp_37_fu_722_p3 <= tmp_fu_694_p2(13 downto 13);
    tmp_38_fu_734_p3 <= tmp_fu_694_p2(29 downto 29);
    tmp_3_fu_267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_259_p3),16));
    tmp_40_fu_903_p3 <= tmp_reg_1291(30 downto 30);
    tmp_42_fu_635_p3 <= grp_fu_1074_p3(13 downto 13);
    tmp_43_fu_646_p3 <= grp_fu_1074_p3(29 downto 29);
    tmp_45_fu_806_p3 <= p_Val2_15_reg_1254(30 downto 30);
        tmp_4_cast_fu_168_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_160_p3),18));

        tmp_5_cast_fu_172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_V),18));

    tmp_5_fu_259_p3 <= p_Val2_2_fu_235_p2(11 downto 11);
        tmp_8_cast_fu_182_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_V),18));

    tmp_8_fu_318_p2 <= (newsignbit_1_fu_310_p3 xor ap_const_lv1_1);
    tmp_9_fu_457_p2 <= (signbit_reg_1126 xor ap_const_lv1_1);
    tmp_fu_694_p2 <= std_logic_vector(signed(p_Val2_8_reg_1242) + signed(p_Val2_9_9_reg_1248));
    tmp_s_fu_385_p2 <= (newsignbit_reg_1139 xor ap_const_lv1_1);
    underflow_1_fu_533_p2 <= (signbit_1_reg_1097 and tmp3_fu_527_p2);
    underflow_1_not_fu_549_p2 <= (tmp4_fu_544_p2 or p_38_i1_reg_1178);
    underflow_2_fu_975_p2 <= (signbit_2_reg_1296 and tmp5_fu_969_p2);
    underflow_2_not_fu_1020_p2 <= (tmp6_fu_1016_p2 or p_38_i2_reg_1363);
    underflow_3_fu_892_p2 <= (signbit_3_reg_1259 and tmp7_fu_886_p2);
    underflow_3_not_fu_990_p2 <= (tmp8_fu_986_p2 or p_38_i3_reg_1338);
    underflow_fu_485_p2 <= (signbit_reg_1126 and tmp1_fu_479_p2);
    underflow_not_fu_580_p2 <= (tmp2_fu_576_p2 or p_38_i_reg_1190);
end behav;
